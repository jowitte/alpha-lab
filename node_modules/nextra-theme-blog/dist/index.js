import {
  BlogProvider,
  sortDate,
  useBlogContext
} from "./chunk-AE2OX3A7.js";
import {
  getStaticTags,
  getTags,
  split
} from "./chunk-5IQBFQMY.js";
import {
  __objRest,
  __spreadProps,
  __spreadValues
} from "./chunk-PKUHTIDK.js";

// src/index.tsx
import React10 from "react";
import { ThemeProvider } from "next-themes";

// src/article-layout.tsx
import React5 from "react";

// src/meta.tsx
import React2 from "react";
import Link from "next/link";

// src/theme-switch.tsx
import React from "react";
import { useTheme } from "next-themes";
import { MoonIcon, SunIcon } from "nextra/icons";
import { useMounted } from "nextra/hooks";
function ThemeSwitch() {
  const { setTheme, resolvedTheme } = useTheme();
  const mounted = useMounted();
  const isDark = resolvedTheme === "dark";
  const toggleTheme = () => {
    setTheme(isDark ? "light" : "dark");
  };
  return /* @__PURE__ */ React.createElement("span", {
    role: "button",
    "aria-label": "Toggle Dark Mode",
    className: "nx-cursor-pointer nx-p-2 nx-text-current",
    tabIndex: 0,
    onClick: toggleTheme,
    onKeyDown: (e) => {
      if (e.key === "Enter")
        toggleTheme();
    }
  }, mounted && isDark ? /* @__PURE__ */ React.createElement(MoonIcon, null) : /* @__PURE__ */ React.createElement(SunIcon, null));
}

// src/utils/traverse.ts
function traverse(pageMap, matcher) {
  for (const pageMapItem of pageMap) {
    if (matcher(pageMapItem)) {
      return pageMapItem;
    }
  }
  for (const item of pageMap) {
    if (item.kind === "Folder") {
      const matched = traverse(item.children, matcher);
      if (matched) {
        return matched;
      }
    }
  }
  return null;
}

// src/utils/parent.ts
var getParent = ({ opts }) => {
  let back = null;
  const parentPages = [];
  const { route } = opts;
  traverse(opts.pageMap, (page) => {
    if ("route" in page && route !== page.route && (route + "/").startsWith(page.route === "/" ? "/" : page.route + "/")) {
      parentPages.push(page);
    }
  });
  const parentPage = parentPages.reverse().find(
    (page) => "frontMatter" in page && page.frontMatter && page.frontMatter.type === "posts"
  );
  if (parentPage) {
    back = parentPage.route;
  }
  return { parentPage, back };
};

// src/meta.tsx
function Meta() {
  var _a;
  const { opts, config } = useBlogContext();
  const { author, date, tag } = opts.frontMatter;
  const { back } = getParent({ opts, config });
  const tags = tag ? split(tag) : [];
  const tagsEl = tags.map((t) => /* @__PURE__ */ React2.createElement(Link, {
    key: t,
    href: "/tags/[tag]",
    as: `/tags/${t}`,
    passHref: true,
    legacyBehavior: true
  }, /* @__PURE__ */ React2.createElement("a", {
    className: "\n          nx-select-none\n          nx-rounded-md\n          nx-bg-gray-200\n          nx-px-1\n          nx-text-sm\n          nx-text-gray-400\n          nx-transition-colors\n          hover:nx-bg-gray-300\n          hover:nx-text-gray-500\n          dark:nx-bg-gray-600\n          dark:nx-text-gray-300\n          dark:hover:nx-bg-gray-700\n          dark:hover:nx-text-gray-200\n        "
  }, t)));
  const readingTime = (_a = opts.readingTime) == null ? void 0 : _a.text;
  return /* @__PURE__ */ React2.createElement("div", {
    className: "nx-mb-8 nx-flex nx-gap-3 " + (readingTime ? "nx-items-start" : "nx-items-center")
  }, /* @__PURE__ */ React2.createElement("div", {
    className: "nx-grow nx-text-gray-400"
  }, /* @__PURE__ */ React2.createElement("div", {
    className: "nx-not-prose nx-flex nx-flex-wrap nx-items-center nx-gap-1"
  }, author, author && date && ",", date && /* @__PURE__ */ React2.createElement("time", {
    dateTime: new Date(date).toISOString()
  }, new Date(date).toDateString()), (author || date) && tags.length > 0 && "  \u2022  ", readingTime || tagsEl), readingTime && /* @__PURE__ */ React2.createElement("div", {
    className: "nx-not-prose nx-mt-1 nx-flex nx-flex-wrap nx-items-center nx-gap-1"
  }, tagsEl)), /* @__PURE__ */ React2.createElement("div", {
    className: "nx-flex nx-items-center nx-gap-3"
  }, back && /* @__PURE__ */ React2.createElement(Link, {
    href: back,
    passHref: true,
    legacyBehavior: true
  }, /* @__PURE__ */ React2.createElement("a", null, "Back")), config.darkMode && /* @__PURE__ */ React2.createElement(ThemeSwitch, null)));
}

// src/mdx-theme.tsx
import React3, {
  createRef,
  createContext,
  useContext,
  useEffect,
  useState
} from "react";
import { MDXProvider } from "@mdx-js/react";
import Link2 from "next/link";
import { createPortal } from "react-dom";
import { Code, Pre, Table, Td, Th, Tr } from "nextra/components";
var HeadingContext = createContext(createRef());
var H1 = ({ children }) => {
  const ref = useContext(HeadingContext);
  const { opts } = useBlogContext();
  const [showHeading, setShowHeading] = useState(false);
  useEffect(() => {
    if (ref.current && opts.hasJsxInH1) {
      setShowHeading(true);
    }
  }, []);
  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, showHeading && createPortal(children, ref.current));
};
var createHeaderLink = (Tag) => (_a) => {
  var _b = _a, { children, id } = _b, props = __objRest(_b, ["children", "id"]);
  return /* @__PURE__ */ React3.createElement(Tag, __spreadValues({
    className: `subheading-${Tag}`
  }, props), children, /* @__PURE__ */ React3.createElement("span", {
    className: "nx-absolute -nx-mt-7",
    id
  }), /* @__PURE__ */ React3.createElement("a", {
    href: `#${id}`,
    className: "subheading-anchor",
    "aria-label": "Permalink for this section"
  }));
};
var A = (_a) => {
  var _b = _a, { children } = _b, props = __objRest(_b, ["children"]);
  var _a2;
  const isExternal = (_a2 = props.href) == null ? void 0 : _a2.startsWith("https://");
  if (isExternal) {
    return /* @__PURE__ */ React3.createElement("a", __spreadValues({
      target: "_blank",
      rel: "noreferrer"
    }, props), children, /* @__PURE__ */ React3.createElement("span", {
      className: "nx-sr-only"
    }, " (opens in a new tab)"));
  }
  return props.href ? /* @__PURE__ */ React3.createElement(Link2, {
    href: props.href,
    passHref: true,
    legacyBehavior: true
  }, /* @__PURE__ */ React3.createElement("a", __spreadValues({}, props), children)) : /* @__PURE__ */ React3.createElement(React3.Fragment, null);
};
var components = {
  h1: H1,
  h2: createHeaderLink("h2"),
  h3: createHeaderLink("h3"),
  h4: createHeaderLink("h4"),
  h5: createHeaderLink("h5"),
  h6: createHeaderLink("h6"),
  a: A,
  pre: (_a) => {
    var _b = _a, { children } = _b, props = __objRest(_b, ["children"]);
    return /* @__PURE__ */ React3.createElement("div", {
      className: "nx-not-prose"
    }, /* @__PURE__ */ React3.createElement(Pre, __spreadValues({}, props), children));
  },
  tr: Tr,
  th: Th,
  td: Td,
  table: (props) => /* @__PURE__ */ React3.createElement(Table, __spreadValues({
    className: "nx-not-prose"
  }, props)),
  code: Code
};
var MDXTheme = ({
  children
}) => {
  return /* @__PURE__ */ React3.createElement(MDXProvider, {
    components
  }, children);
};

// src/basic-layout.tsx
import Head from "next/head";
import React4, { useRef } from "react";
var BasicLayout = ({ children }) => {
  var _a;
  const { config, opts } = useBlogContext();
  const title = `${opts.title}${config.titleSuffix || ""}`;
  const ref = useRef(null);
  return /* @__PURE__ */ React4.createElement("article", {
    className: "nx-container nx-prose-sm nx-prose dark:nx-prose-dark md:nx-prose",
    dir: "ltr"
  }, /* @__PURE__ */ React4.createElement(Head, null, /* @__PURE__ */ React4.createElement("title", null, title), (_a = config.head) == null ? void 0 : _a.call(config, { title, meta: opts.frontMatter })), /* @__PURE__ */ React4.createElement(HeadingContext.Provider, {
    value: ref
  }, opts.hasJsxInH1 ? /* @__PURE__ */ React4.createElement("h1", {
    ref
  }) : null, !opts.hasJsxInH1 ? /* @__PURE__ */ React4.createElement("h1", null, opts.title) : null, children, config.footer));
};

// src/article-layout.tsx
var ArticleLayout = ({ children }) => {
  const { config } = useBlogContext();
  return /* @__PURE__ */ React5.createElement(BasicLayout, null, /* @__PURE__ */ React5.createElement(Meta, null), /* @__PURE__ */ React5.createElement(MDXTheme, null, children, config.postFooter, config.comments));
};

// src/posts-layout.tsx
import Link4 from "next/link";
import { useRouter } from "next/router";
import React7 from "react";

// src/nav.tsx
import React6 from "react";
import Link3 from "next/link";

// src/utils/collect.ts
var isNav = (page) => {
  var _a;
  const type = "frontMatter" in page && ((_a = page.frontMatter) == null ? void 0 : _a.type);
  return type && ["page", "posts"].includes(type);
};
var isPost = (page) => {
  var _a;
  if (page.kind === "Folder" || page.kind === "Meta" || page.name.startsWith("_"))
    return false;
  const type = (_a = page.frontMatter) == null ? void 0 : _a.type;
  return !type || type === "post";
};
var collectPostsAndNavs = ({ opts }) => {
  const posts = [];
  const navPages = [];
  const { route } = opts;
  traverse(opts.pageMap, (page) => {
    if (isNav(page)) {
      navPages.push(__spreadProps(__spreadValues({}, page), { active: page.route === route }));
    }
    if (isPost(page)) {
      posts.push(page);
    }
  });
  posts.sort(sortDate);
  navPages.sort(sortDate);
  return { posts, navPages };
};

// src/nav.tsx
function Nav() {
  var _a;
  const { opts, config } = useBlogContext();
  const { navPages } = collectPostsAndNavs({ opts, config });
  return /* @__PURE__ */ React6.createElement("div", {
    className: "nx-mb-8 nx-flex nx-items-center nx-gap-3"
  }, /* @__PURE__ */ React6.createElement("div", {
    className: "nx-flex nx-grow nx-flex-wrap nx-items-center nx-justify-end nx-gap-3"
  }, navPages.map((page) => {
    var _a2, _b;
    if (page.active) {
      return /* @__PURE__ */ React6.createElement("span", {
        key: page.route,
        className: "nx-cursor-default nx-text-gray-400"
      }, ((_a2 = page.frontMatter) == null ? void 0 : _a2.title) || page.name);
    }
    return /* @__PURE__ */ React6.createElement(Link3, {
      key: page.route,
      href: page.route,
      passHref: true,
      legacyBehavior: true
    }, /* @__PURE__ */ React6.createElement("a", null, ((_b = page.frontMatter) == null ? void 0 : _b.title) || page.name));
  }), (_a = config.navs) == null ? void 0 : _a.map((nav) => /* @__PURE__ */ React6.createElement(Link3, {
    key: nav.url,
    href: nav.url,
    passHref: true,
    legacyBehavior: true
  }, /* @__PURE__ */ React6.createElement("a", null, nav.name)))), config.darkMode && /* @__PURE__ */ React6.createElement(ThemeSwitch, null));
}

// src/posts-layout.tsx
var PostsLayout = ({ children }) => {
  const { config, opts } = useBlogContext();
  const { posts } = collectPostsAndNavs({ config, opts });
  const router = useRouter();
  const { type } = opts.frontMatter;
  const tagName = type === "tag" ? router.query.tag : null;
  const postList = posts.map((post) => {
    var _a, _b, _c;
    if (tagName) {
      const tags = getTags(post);
      if (!Array.isArray(tagName) && !tags.includes(tagName)) {
        return null;
      }
    } else if (type === "tag") {
      return null;
    }
    const postTitle = ((_a = post.frontMatter) == null ? void 0 : _a.title) || post.name;
    const date = ((_b = post.frontMatter) == null ? void 0 : _b.date) && new Date(post.frontMatter.date);
    const description = (_c = post.frontMatter) == null ? void 0 : _c.description;
    return /* @__PURE__ */ React7.createElement("div", {
      key: post.route,
      className: "post-item"
    }, /* @__PURE__ */ React7.createElement("h3", null, /* @__PURE__ */ React7.createElement(Link4, {
      href: post.route,
      passHref: true,
      legacyBehavior: true
    }, /* @__PURE__ */ React7.createElement("a", {
      className: "!nx-no-underline"
    }, postTitle))), description && /* @__PURE__ */ React7.createElement("p", {
      className: "nx-mb-2 nx-text-gray-400"
    }, description, config.readMore && /* @__PURE__ */ React7.createElement(Link4, {
      href: post.route,
      passHref: true,
      legacyBehavior: true
    }, /* @__PURE__ */ React7.createElement("a", {
      className: "post-item-more nx-ml-2"
    }, config.readMore))), date && /* @__PURE__ */ React7.createElement("time", {
      className: "nx-text-sm nx-text-gray-300",
      dateTime: date.toISOString()
    }, date.toDateString()));
  });
  return /* @__PURE__ */ React7.createElement(BasicLayout, null, /* @__PURE__ */ React7.createElement(Nav, null), /* @__PURE__ */ React7.createElement(MDXTheme, null, children), postList);
};

// src/page-layout.tsx
import React8 from "react";
var PageLayout = ({ children }) => {
  return /* @__PURE__ */ React8.createElement(BasicLayout, null, /* @__PURE__ */ React8.createElement(Nav, null), /* @__PURE__ */ React8.createElement(MDXTheme, null, children));
};

// src/constants.tsx
import React9 from "react";
var DEFAULT_THEME = {
  footer: /* @__PURE__ */ React9.createElement("small", {
    className: "nx-mt-32 nx-block"
  }, "CC BY-NC 4.0 ", new Date().getFullYear(), " \xA9 Shu Ding."),
  readMore: "Read More \u2192"
};

// src/index.tsx
import { useRouter as useRouter2 } from "next/router";
import { useTheme as useTheme2 } from "next-themes";
var layoutMap = {
  post: ArticleLayout,
  page: PageLayout,
  posts: PostsLayout,
  tag: PostsLayout
};
var BlogLayout = ({
  config,
  children,
  opts
}) => {
  const type = opts.frontMatter.type || "post";
  const Layout2 = layoutMap[type];
  if (!Layout2) {
    throw new Error(
      `nextra-theme-blog does not support the layout type "${type}" It only supports "post", "page", "posts" and "tag"`
    );
  }
  return /* @__PURE__ */ React10.createElement(BlogProvider, {
    opts,
    config
  }, /* @__PURE__ */ React10.createElement(Layout2, null, children));
};
function Layout(props) {
  const { route } = useRouter2();
  const context = globalThis.__nextra_pageContext__[route];
  if (!context)
    throw new Error(`No content found for ${route}.`);
  const extendedConfig = __spreadValues(__spreadValues({}, DEFAULT_THEME), context.themeConfig);
  return /* @__PURE__ */ React10.createElement(ThemeProvider, {
    attribute: "class",
    defaultTheme: "system",
    enableSystem: true
  }, /* @__PURE__ */ React10.createElement(BlogLayout, {
    config: extendedConfig,
    opts: context.pageOpts
  }, /* @__PURE__ */ React10.createElement(context.Content, __spreadValues({}, props))));
}
export {
  Layout as default,
  getStaticTags,
  useBlogContext,
  useTheme2 as useTheme
};
